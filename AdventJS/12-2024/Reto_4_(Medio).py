"""
춰Es hora de poner el 치rbol de Navidad en casa! 游꾻 Pero este a침o queremos que
sea especial. Vamos a crear una funci칩n que recibe la altura del 치rbol (un
entero positivo entre 1 y 100) y un car치cter especial para decorarlo.

La funci칩n debe devolver un string que represente el 치rbol de Navidad,
construido de la siguiente manera:

- El 치rbol est치 compuesto de tri치ngulos de caracteres especiales.
- Los espacios en blanco a los lados del 치rbol se representan con guiones
bajos _.
- Todos los 치rboles tienen un tronco de dos l칤neas, representado por el
car치cter #.
- El 치rbol siempre debe tener la misma longitud por cada lado.
- Debes asegurarte de que el 치rbol tenga la forma correcta usando saltos de
l칤nea \n para cada l칤nea.
"""


# ++++++++++++++++++++++++++++++ # FUNCIONES # ++++++++++++++++++++++++++++++ #
def create_xmas_tree(height, ornament):
    # Se crea la variable que almacena el arbol
    tree = ''
    # Se calcula el ancho m치ximo
    max_width = 2*height-1
    # Se itera la cantidad de veces que haya que colocar un ornament
    for i in range(1, height+1):
        # Cantidad de ornamentos a poner
        n_ornament = 2*i-1
        # Cantidad de barra bajas a poner
        n_spaces = int((max_width - n_ornament)/2)
        # Linea del arbol
        tree += '_'*n_spaces + ornament*n_ornament + '_'*n_spaces + '\n'

    # Se a침ade el tronco
    tree += '_'*int(max_width/2) + chr(35) + '_'*int(max_width/2) + '\n'
    tree += '_'*int(max_width/2) + chr(35) + '_'*int(max_width/2)

    return tree


# +++++++++++++++++++++++++++++++++ # MAIN # ++++++++++++++++++++++++++++++++ #
def main():
    tree = create_xmas_tree(11, '*')
    print(tree)
    pass


if __name__ == "__main__":
    main()
